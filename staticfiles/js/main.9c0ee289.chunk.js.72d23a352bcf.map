{"version":3,"sources":["containers/Home.js","actions/types.js","actions/auth.js","containers/Activate.js","containers/Login.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","containers/Signup.js","components/Navbar.js","hocs/Layout.js","reducers/auth.js","reducers/index.js","store.js","App.js","index.js"],"names":["Home","className","to","LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","LOGOUT","load_user","dispatch","a","localStorage","getItem","config","headers","Authorization","Accept","axios","get","res","type","payload","data","connect","verify","uid","token","body","JSON","stringify","post","match","useState","verified","setVerivied","onClick","e","params","state","isAuthenticated","auth","login","email","password","formData","setFormData","onChange","target","name","value","onSubmit","preventDefault","placeholder","required","minLength","reset_password","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","signup","re_password","accountCreated","setAccountCreated","logout","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","href","checkAuthenticated","code","props","useEffect","children","initialState","access","refresh","user","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Login","Signup","ResetPassword","ResetPasswordConfirm","Activate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c0ee289.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"bg-dark text-light p-5 m-5\">\r\n        <h1>Welcome to Auth System!</h1>\r\n        <br />\r\n        <h3>How it works?</h3>\r\n        <p>\r\n          1. Click Signup on navigation bar to create a new account. <br />\r\n          2. Fill the form and click register button. <br />\r\n          3. Check your email to activate your account. <br />\r\n          4. Login to your account. <br />\r\n          5. Click reset password if you want to change your password <br />\r\n        </p>\r\n        <hr />\r\n        <Link className=\"btn btn-primary\" to=\"/login\">\r\n          Login\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNUP_FAIL = \"SIGNUP_FAIL\";\r\nexport const ACTIVATION_SUCCESS = \"ACTIVATION_SUCCESS\";\r\nexport const ACTIVATION_FAIL = \"ACTIVATION_FAIL\";\r\nexport const USER_LOADED_SUCCESS = \"USER_LOADED_SUCCESS\";\r\nexport const USER_LOADED_FAIL = \"USER_LOADED_FAIL\";\r\nexport const AUTHENTICATED_SUCCESS = \"AUTHENTICATED_SUCCESS\";\r\nexport const AUTHENTICATED_FAIL = \"AUTHENTICATED_FAIL\";\r\nexport const PASSWORD_RESET_SUCCESS = \"PASSWORD_RESET_SUCCESS\";\r\nexport const PASSWORD_RESET_FAIL = \"PASSWORD_RESET_FAIL\";\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = \"PASSWORD_RESET_CONFIRM_SUCCESS\";\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = \"PASSWORD_RESET_CONFIRM_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n","import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  USER_LOADED_SUCCESS,\r\n  USER_LOADED_FAIL,\r\n  AUTHENTICATED_SUCCESS,\r\n  AUTHENTICATED_FAIL,\r\n  PASSWORD_RESET_SUCCESS,\r\n  PASSWORD_RESET_FAIL,\r\n  PASSWORD_RESET_CONFIRM_SUCCESS,\r\n  PASSWORD_RESET_CONFIRM_FAIL,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAIL,\r\n  ACTIVATION_SUCCESS,\r\n  ACTIVATION_FAIL,\r\n  LOGOUT,\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nexport const checkAuthenticated = () => async (dispatch) => {\r\n  if (localStorage.getItem(\"access\")) {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n    const body = JSON.stringify({ token: localStorage.getItem(\"access\") });\r\n    try {\r\n      const res = await axios.post(`/auth/jwt/verify/`, body, config);\r\n      if (res.data.code !== \"token_not_valid\") {\r\n        dispatch({\r\n          type: AUTHENTICATED_SUCCESS,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: AUTHENTICATED_FAIL,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      dispatch({\r\n        type: AUTHENTICATED_FAIL,\r\n      });\r\n    }\r\n  } else {\r\n    dispatch({\r\n      type: AUTHENTICATED_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const load_user = () => async (dispatch) => {\r\n  if (localStorage.getItem(\"access\")) {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.get(`/auth/users/me/`, config);\r\n\r\n      dispatch({\r\n        type: USER_LOADED_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: USER_LOADED_FAIL,\r\n      });\r\n    }\r\n  } else {\r\n    dispatch({\r\n      type: USER_LOADED_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(`/auth/jwt/create/`, body, config);\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(load_user());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const signup =\r\n  (name, email, password, re_password) => async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ name, email, password, re_password });\r\n\r\n    try {\r\n      const res = await axios.post(`/auth/users/`, body, config);\r\n      dispatch({\r\n        type: SIGNUP_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: SIGNUP_FAIL,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const verify = (uid, token) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ uid, token });\r\n\r\n  try {\r\n    await axios.post(`/auth/users/activation/`, body, config);\r\n    dispatch({\r\n      type: ACTIVATION_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ACTIVATION_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const reset_password = (email) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ email });\r\n  try {\r\n    await axios.post(`/auth/users/reset_password/`, body, config);\r\n    dispatch({\r\n      type: PASSWORD_RESET_SUCCESS,\r\n    });\r\n  } catch {\r\n    dispatch({\r\n      type: PASSWORD_RESET_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const reset_password_confirm =\r\n  (uid, token, new_password, re_new_password) => async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n    try {\r\n      await axios.post(`/auth/users/reset_password_confirm/`, body, config);\r\n      dispatch({\r\n        type: PASSWORD_RESET_CONFIRM_SUCCESS,\r\n      });\r\n    } catch {\r\n      dispatch({\r\n        type: PASSWORD_RESET_CONFIRM_FAIL,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { verify } from \"../actions/auth\";\r\n\r\nconst Activate = ({ verify, match }) => {\r\n  const [verified, setVerivied] = useState(false);\r\n\r\n  const verify_account = (e) => {\r\n    const uid = match.params.uid;\r\n    const token = match.params.token;\r\n    verify(uid, token);\r\n    setVerivied(true);\r\n  };\r\n\r\n  if (verified) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container text-center mt-5\">\r\n      <h1 className=\"p-3\">Verify your Account</h1>\r\n      <button className=\"btn btn-primary p-3\" onClick={verify_account}>\r\n        Verify\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { verify })(Activate);\r\n","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    login(email, password);\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Sign In</h1>\r\n      <p>Sign Into your Account</p>\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group mt-3\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group mt-3\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n            minLength=\"8\"\r\n            required\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-primary mt-3\" type=\"submit\">\r\n          Login\r\n        </button>\r\n      </form>\r\n      <p className=\"mt-3\">\r\n        Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n      </p>\r\n      <p className=\"mt-3\">\r\n        Forgot your password? <Link to=\"/reset-password\">Reset Password</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset_password } from \"../actions/auth\";\r\n\r\nconst ResetPassword = ({ reset_password }) => {\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n  });\r\n\r\n  const { email } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    reset_password(email);\r\n    setRequestSent(true);\r\n  };\r\n\r\n  if (requestSent) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Request Password Reset</h1>\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group mt-3\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-primary mt-3\" type=\"submit\">\r\n          Reset Password\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { reset_password })(ResetPassword);\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset_password_confirm } from \"../actions/auth\";\r\n\r\nconst ResetPasswordConfirm = ({ match, reset_password_confirm }) => {\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    new_password: \"\",\r\n    re_new_password: \"\",\r\n  });\r\n\r\n  const { new_password, re_new_password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const uid = match.params.uid;\r\n    const token = match.params.token;\r\n\r\n    reset_password_confirm(uid, token, new_password, re_new_password);\r\n    setRequestSent(true);\r\n  };\r\n\r\n  if (requestSent) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group mt-3\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"password\"\r\n            placeholder=\"New Password\"\r\n            name=\"new_password\"\r\n            value={new_password}\r\n            onChange={(e) => onChange(e)}\r\n            minLength=\"8\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group mt-3\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"password\"\r\n            placeholder=\"Confirm New Password\"\r\n            name=\"re_new_password\"\r\n            value={re_new_password}\r\n            onChange={(e) => onChange(e)}\r\n            minLength=\"8\"\r\n            required\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-primary mt-3\" type=\"submit\">\r\n          Reset Password\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);\r\n","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signup } from \"../actions/auth\";\r\n\r\nconst Signup = ({ signup, isAuthenticated }) => {\r\n  const [accountCreated, setAccountCreated] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    re_password: \"\",\r\n  });\r\n\r\n  const { name, email, password, re_password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password === re_password) {\r\n      signup(name, email, password, re_password);\r\n      setAccountCreated(true);\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  if (accountCreated) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Sign Up</h1>\r\n      <p>Create your Account</p>\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group mt-3\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group mt-3\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n            minLength=\"8\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group mt-3\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n            minLength=\"8\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group mt-3\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            name=\"re_password\"\r\n            value={re_password}\r\n            onChange={(e) => onChange(e)}\r\n            minLength=\"8\"\r\n            required\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-primary mt-3\" type=\"submit\">\r\n          Register\r\n        </button>\r\n      </form>\r\n      <p className=\"mt-3\">\r\n        Already have an account? <Link to=\"/login\">Sign In</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { signup })(Signup);\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../actions/auth\";\r\n\r\nconst Navbar = ({ logout, isAuthenticated }) => {\r\n  const guestLink = () => (\r\n    <Fragment>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/login\">\r\n          Login\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/signup\">\r\n          Signup\r\n        </Link>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n  const authLink = () => (\r\n    <li className=\"nav-item\">\r\n      <a className=\"nav-link\" href=\"#!\" onClick={logout}>\r\n        Logout\r\n      </a>\r\n    </li>\r\n  );\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Auth System\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            {isAuthenticated ? authLink() : guestLink()}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React, { useEffect } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { connect } from \"react-redux\";\r\nimport { checkAuthenticated, load_user } from \"../actions/auth\";\r\n\r\nconst Layout = (props) => {\r\n  useEffect(() => {\r\n    props.checkAuthenticated();\r\n    props.load_user();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { checkAuthenticated, load_user })(Layout);\r\n","import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  USER_LOADED_SUCCESS,\r\n  USER_LOADED_FAIL,\r\n  AUTHENTICATED_SUCCESS,\r\n  AUTHENTICATED_FAIL,\r\n  PASSWORD_RESET_SUCCESS,\r\n  PASSWORD_RESET_FAIL,\r\n  PASSWORD_RESET_CONFIRM_SUCCESS,\r\n  PASSWORD_RESET_CONFIRM_FAIL,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAIL,\r\n  ACTIVATION_SUCCESS,\r\n  ACTIVATION_FAIL,\r\n  LOGOUT,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  access: localStorage.getItem(\"access\"),\r\n  refresh: localStorage.getItem(\"refresh\"),\r\n  isAuthenticated: null,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case AUTHENTICATED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"access\", payload.access);\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        access: payload.access,\r\n        refresh: payload.refresh,\r\n      };\r\n    case SIGNUP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n      };\r\n    case USER_LOADED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: payload,\r\n      };\r\n    case AUTHENTICATED_FAIL:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n      };\r\n    case USER_LOADED_FAIL:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n      };\r\n    case LOGIN_FAIL:\r\n    case SIGNUP_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"access\");\r\n      localStorage.removeItem(\"refresh\");\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        access: null,\r\n        refresh: null,\r\n        user: null,\r\n      };\r\n    case PASSWORD_RESET_SUCCESS:\r\n    case PASSWORD_RESET_FAIL:\r\n    case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n    case PASSWORD_RESET_CONFIRM_FAIL:\r\n    case ACTIVATION_SUCCESS:\r\n    case ACTIVATION_FAIL:\r\n      return {\r\n        ...state,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\n\r\nexport default combineReducers({ auth });\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Home from \"./containers/Home\";\r\nimport Activate from \"./containers/Activate\";\r\nimport Login from \"./containers/Login\";\r\nimport ResetPassword from \"./containers/ResetPassword\";\r\nimport ResetPasswordConfirm from \"./containers/ResetPasswordConfirm\";\r\nimport Signup from \"./containers/Signup\";\r\nimport Layout from \"./hocs/Layout\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <Layout>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/signup\" component={Signup} />\r\n          <Route exact path=\"/reset-password\" component={ResetPassword} />\r\n          <Route\r\n            exact\r\n            path=\"/password/reset/confirm/:uid/:token\"\r\n            component={ResetPasswordConfirm}\r\n          />\r\n          <Route exact path=\"/activate/:uid/:token\" component={Activate} />\r\n        </Switch>\r\n      </Layout>\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}